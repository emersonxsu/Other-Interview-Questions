void printMaxSubSquare(bool m[row][col]) {
  int i,j;
  int dp[row][col];
  int max_of_s, max_i, max_j; 
  
  /* Set first column of S[][]*/
  for(i = 0; i < row; i++)  dp[i][0] = m[i][0];
  
  /* Set first row of S[][]*/    
  for(j = 0; j < col; j++)  dp[0][j] = m[0][j];
      
  /* Construct other entries of dp[][]*/
  for(i = 1; i <row; i++) {
    for(j = 1; j < col; j++) {
      if(m[i][j] == 1) 
        dp[i][j] = min(dp[i][j-1], dp[i-1][j], dp[i-1][j-1]) + 1;
      else
        dp[i][j] = 0;
    }    
  } 
  /* Find the maximum entry, and indexes of maximum entry 
     in dp[][] */
  max_of_s = dp[0][0]; max_i = 0; max_j = 0;
  for(i = 0; i < row; i++) {
    for(j = 0; j < col; j++) {
      if(max_of_s < dp[i][j]) {
         max_of_s = dp[i][j];
         max_i = i; 
         max_j = j;
      }        
    }                 
  }
